<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Songhay.DataAccess</name>
    </assembly>
    <members>
        <member name="T:Songhay.DataAccess.CommonParameterUtility">
            <summary>
            A few static helper members
            for <see cref="T:System.Data.Common.DbParameter"/>
            and selected <c>System.Data</c> interfaces.
            </summary>
        </member>
        <member name="M:Songhay.DataAccess.CommonParameterUtility.GetParameter(System.Data.IDbCommand,System.String)">
            <summary>
            Gets a parameter.
            </summary>
            <param name="dbmsCommand">The object implementing <see cref="T:System.Data.IDbCommand"/>.</param>
            <param name="parameterName">The name of the Parameter.</param>
            <returns>Returns an object implementing <see cref="T:System.Data.IDataParameter"/>.</returns>
        </member>
        <member name="M:Songhay.DataAccess.CommonParameterUtility.GetParameter(System.Data.IDbCommand,System.String,System.Object)">
            <summary>
            Gets a parameter.
            </summary>
            <param name="dbmsCommand">The object implementing <see cref="T:System.Data.IDbCommand"/>.</param>
            <param name="parameterName">The name of the Parameter.</param>
            <param name="parameterValue">The value of the Parameter.</param>
            <returns>Returns an object implementing <see cref="T:System.Data.IDataParameter"/>.</returns>
        </member>
        <member name="M:Songhay.DataAccess.CommonParameterUtility.GetParameter(System.Data.IDbCommand,System.String,System.Object,System.Data.DbType)">
            <summary>
            Gets a parameter.
            </summary>
            <param name="dbmsCommand">The object implementing <see cref="T:System.Data.IDbCommand"/>.</param>
            <param name="parameterName">The name of the Parameter.</param>
            <param name="parameterValue">The value of the Parameter.</param>
            <param name="parameterType">The <see cref="T:System.Data.DbType"/> of the Parameter.</param>
            <returns>Returns an object implementing <see cref="T:System.Data.IDataParameter"/>.</returns>
        </member>
        <member name="M:Songhay.DataAccess.CommonParameterUtility.GetParameterFromParameterMetadata(System.Data.IDbCommand,Songhay.Models.DataParameterMetadata)">
            <summary>
            Gets the parameter.
            </summary>
            <param name="dbmsCommand">The DBMS command.</param>
            <param name="parameterMeta">The parameter meta.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            dbmsCommand;The expected Data Command is not here.
            or
            parameterMeta;The expected parameter metadata is not here.
            </exception>
        </member>
        <member name="M:Songhay.DataAccess.CommonParameterUtility.GetParameters(System.Data.IDbCommand,System.Collections.IEnumerable)">
            <summary>
            Gets an array of objects implementing <see cref="T:System.Data.IDataParameter"/>.
            </summary>
            <param name="dbmsCommand">The object implementing <see cref="T:System.Data.IDbCommand"/>.</param>
            <param name="parameterCollection">A collection of parameters.</param>
            <returns>Returns an array of objects implementing <see cref="T:System.Data.IDataParameter"/>.</returns>
            <remarks>
            Supported collections:
                IEnumerable&lt;IDataParameter&gt; [pass-through]
                IEnumerable&lt;DataParameterMetadata&gt;
                Dictionary&lt;string, object&gt;
            </remarks>
        </member>
        <member name="M:Songhay.DataAccess.CommonParameterUtility.GetParameterValue``1(System.Object)">
            <summary>
            Returns <see cref="T:System.DBNull"/>
            when needed based on the specified type.
            </summary>
            <typeparam name="TypeOfValue">The specified type.</typeparam>
            <param name="parameterValue">The boxed Parameter of the specified type.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonParameterUtility.GetParameterValue``1(System.Object,System.Boolean)">
            <summary>
            Returns <see cref="T:System.DBNull"/>
            when needed based on the specified type.
            </summary>
            <typeparam name="TypeOfValue">The specified type.</typeparam>
            <param name="parameterValue">The boxed Parameter of the specified type.</param>
            <param name="returnDbNullForZero">When true, return <see cref="T:System.DBNull"/> for numeric values.</param>
        </member>
        <member name="T:Songhay.DataAccess.CommonReaderUtility">
            <summary>
            A few static helper members
            for <see cref="T:System.Data.Common.DbDataReader"/>
            and selected <c>System.Data</c> interfaces.
            </summary>
            <summary>
            A few static helper members
            for <see cref="T:System.Data.IDataReader"/>
            and selected <c>System.Data</c> interfaces.
            </summary>
        </member>
        <member name="M:Songhay.DataAccess.CommonReaderUtility.GetReader(System.Data.IDbConnection,System.String)">
            <summary>
            Returns an instance of <see cref="T:System.Data.IDataReader"/>
            based on the instance of <see cref="T:System.Data.Common.DbConnection"/>.
            </summary>
            <param name="connection">The <see cref="T:System.Data.Common.DbConnection"/>.</param>
            <param name="query">The SELECT SQL statement.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonReaderUtility.GetReader(System.Data.IDbConnection,System.String,System.Collections.IEnumerable)">
            <summary>
            Returns an instance of <see cref="T:System.Data.IDataReader"/>
            based on the object implementing <see cref="T:System.Data.IDbConnection"/>.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="query">The SELECT SQL statement.</param>
            <param name="parameterCollection">A list of parameters.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonReaderUtility.GetReader(System.Data.IDbConnection,System.String,System.Collections.IEnumerable,System.Int32)">
            <summary>
            Returns an instance of <see cref="T:System.Data.IDataReader"/>
            based on the object implementing <see cref="T:System.Data.IDbConnection"/>.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="query">The SELECT SQL statement.</param>
            <param name="parameterCollection">A list of parameters.</param>
            <param name="timeout">Command timeout in seconds.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonReaderUtility.GetReader(System.Data.IDbConnection,System.String,System.Collections.IEnumerable,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Returns an instance of <see cref="T:System.Data.IDataReader"/>
            based on the object implementing <see cref="T:System.Data.IDbConnection"/>.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="query">The SELECT SQL statement.</param>
            <param name="parameterCollection">A list of parameters.</param>
            <param name="timeout">Command timeout in seconds.</param>
            <param name="ambientTransaction">The ambient <see cref="T:System.Data.IDbTransaction"/> implementation.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonReaderUtility.GetXPathDocument(System.Data.IDbCommand,System.String)">
            <summary>
            Returns a <see cref="T:System.Xml.XPath.XPathDocument"/>
            based on the object implementing <see cref="T:System.Data.IDbCommand"/>.
            </summary>
            <param name="selectCommand">The object implementing <see cref="T:System.Data.IDbCommand"/>.</param>
            <param name="documentElement">Document element name of the XML set.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonReaderUtility.GetXPathDocument(System.Data.IDbCommand,System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Xml.XPath.XPathDocument"/>
            based on the object implementing <see cref="T:System.Data.IDbCommand"/>.
            </summary>
            <param name="selectCommand">The object implementing <see cref="T:System.Data.IDbCommand"/>.</param>
            <param name="documentElement">Document element name of the XML set.</param>
            <param name="rowElement">Row element name of the XML set.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonReaderUtility.GetXPathDocument(System.Data.IDbConnection,System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Xml.XPath.XPathDocument"/>
            based on the object implementing <see cref="T:System.Data.IDbConnection"/>.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="query">The SELECT SQL statement.</param>
            <param name="documentElement">Document element name of the XML set.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonReaderUtility.GetXPathDocument(System.Data.IDbConnection,System.String,System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Xml.XPath.XPathDocument"/>
            based on the object implementing <see cref="T:System.Data.IDbConnection"/>.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="query">The SELECT SQL statement.</param>
            <param name="documentElement">Document element name of the XML set.</param>
            <param name="rowElement">Row element name of the XML set.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonReaderUtility.GetXPathDocument(System.String,System.Data.IDataReader)">
            <summary>
            Returns a <see cref="T:System.Xml.XPath.XPathDocument"/>
            based on the data of the type <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="documentElement">Document element name of the XML set.</param>
            <param name="reader">Data of the type <see cref="T:System.Data.IDataReader"/>.</param>
            <remarks>This member is designed for one-row data sets.</remarks>
        </member>
        <member name="M:Songhay.DataAccess.CommonReaderUtility.GetXPathDocument(System.String,System.String,System.Data.IDataReader)">
            <summary>
            Returns a <see cref="T:System.Xml.XPath.XPathDocument"/>
            based on the data of the type <see cref="T:System.Data.IDataReader"/>.
            </summary>
            <param name="documentElement">Document element name of the XML set.</param>
            <param name="rowElement">Row element name of the XML set.</param>
            <param name="reader">Set implementing <see cref="T:System.Data.IDataReader"/>.</param>
        </member>
        <member name="T:Songhay.DataAccess.CommonScalarUtility">
            <summary>
            A few static helper members
            for <see cref="T:System.Data.Common.DbDataReader"/>
            and selected <c>System.Data</c> interfaces.
            </summary>
        </member>
        <member name="M:Songhay.DataAccess.CommonScalarUtility.GetObject(System.Data.IDbConnection,System.String)">
            <summary>
            Return a <see cref="T:System.Object"/>
            based on the DBMS query.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="query">The SELECT SQL statement.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonScalarUtility.GetObject(System.Data.IDbConnection,System.String,System.Collections.IEnumerable)">
            <summary>
            Return a <see cref="T:System.Object"/>
            based on the DBMS query.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="query">The SELECT SQL statement.</param>
            <param name="parameterCollection">The parameters.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonScalarUtility.GetString(System.Data.IDbConnection,System.String)">
            <summary>
            Return a <see cref="T:System.String"/>
            based on the DBMS query.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="query">The SQL statement.</param>
            <remarks>
            Use this member for queries like this:
            
                DECLARE @xml XML
                SET @xml = (SELECT * FROM MyTable FOR XML AUTO, ELEMENTS, ROOT('RootElement'))
                SELECT @xml
            
            </remarks>
        </member>
        <member name="M:Songhay.DataAccess.CommonScalarUtility.GetString(System.Data.IDbConnection,System.String,System.Boolean)">
            <summary>
            Return a <see cref="T:System.String"/>
            based on the DBMS query.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="query">The SQL statement.</param>
            <param name="returnXmlForEmptySet">When <c>true</c> <see cref="M:Songhay.Xml.XmlUtility.GetInternalMessage(System.String,System.String[])"/> is used for empty sets.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonScalarUtility.GetString(System.Data.IDbConnection,System.String,System.Collections.IEnumerable)">
            <summary>
            Return a <see cref="T:System.String"/>
            based on the DBMS query.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="query">The SQL statement.</param>
            <param name="parameterCollection">The parameters.</param>
        </member>
        <member name="M:Songhay.DataAccess.CommonScalarUtility.GetString(System.Data.IDbConnection,System.String,System.Collections.IEnumerable,System.Boolean)">
            <summary>
            Return a <see cref="T:System.String"/>
            based on the DBMS query.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="query">The SQL statement.</param>
            <param name="parameterCollection">The parameters.</param>
            <param name="returnXmlForEmptySet">When <c>true</c> <see cref="M:Songhay.Xml.XmlUtility.GetInternalMessage(System.String,System.String[])"/> is used for empty sets.</param>
        </member>
        <member name="T:Songhay.DataAccess.CommonDbmsUtility">
            <summary>
            Generic procedures for data access.
            </summary>
            <summary>
            Generic procedures for data access.
            </summary>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.GetAdapter(System.String)">
            <summary>
            Returns a <see cref="T:System.Data.Common.DbDataAdapter"/>.
            </summary>
            <param name="invariantProviderName">
            The invariant name of the data provider.
            </param>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.GetAdapter(System.String,System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Data.Common.DbDataAdapter"/>.
            </summary>
            <param name="invariantProviderName">
            The invariant name of the data provider.
            </param>
            <param name="connectionConfiguration">
            The provider connection string.
            </param>
            <param name="query">
            The SELECT statement used to generate SELECT, INSERT, UPDATE, DELETE
            <see cref="T:System.Data.Common.DbCommand"/> commands.
            </param>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.GetCommand(System.String,System.Data.CommandType,System.String)">
            <summary>
            Gets the command.
            </summary>
            <param name="invariantProviderName">Name of the invariant provider.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">The Invariant Provider Name was not specified.</exception>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.GetConnection(System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Data.Common.DbConnection"/>.
            </summary>
            <param name="invariantProviderName">
            The invariant name of the data provider.
            </param>
            <param name="connectionConfiguration">
            The provider connection string.
            </param>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.GetProviderFactory(System.String)">
            <summary>
            Gets the provider factory.
            </summary>
            <param name="invariantProviderName">Name of the invariant provider.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">The Invariant Provider Name was not specified.</exception>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.Close(System.Data.IDbConnection)">
            <summary>
            Closes a database connection.
            </summary>
            <param name="connection">
            An instance implementing <see cref="T:System.Data.IDbConnection"/>.
            </param>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.DoCommand(System.Data.IDbConnection,System.String)">
            <summary>
            Executes a SQL Statement for the current instance of <see cref="T:System.Data.IDbConnection"/>.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="sqlStatement">The SQL statement.</param>
            <returns>Returns the number of records affected.</returns>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.DoCommand(System.Data.IDbConnection,System.Data.IDbTransaction,System.String)">
            <summary>
            Executes a SQL sqlStatement for the current instance of <see cref="T:System.Data.IDbConnection"/>.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="ambientTransaction">An object implementing the explicit, server <see cref="T:System.Data.IDbTransaction"/>.</param>
            <param name="sqlStatement">The SQL statement.</param>
            <returns>Returns the number of records affected.</returns>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.DoCommand(System.Data.IDbConnection,System.String,System.Collections.IEnumerable)">
            <summary>
            Executes a SQL sqlStatement for the current instance of <see cref="T:System.Data.IDbConnection"/>.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="sqlStatement">The SQL statement.</param>
            <param name="parameterCollection">The parameters.</param>
            <returns>Returns the number of records affected.</returns>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.DoCommand(System.Data.IDbConnection,System.Data.IDbTransaction,System.String,System.Collections.IEnumerable)">
            <summary>
            Executes a SQL sqlStatement for the current instance of <see cref="T:System.Data.IDbConnection"/>.
            </summary>
            <param name="connection">The object implementing <see cref="T:System.Data.IDbConnection"/>.</param>
            <param name="ambientTransaction">An instance of the explicit, server <see cref="T:System.Data.IDbTransaction"/>.</param>
            <param name="sqlStatement">The SQL statement.</param>
            <param name="parameterCollection">The parameters.</param>
            <returns>Returns the number of records affected.</returns>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.GetAdapter(System.Data.Common.DbProviderFactory,System.String,System.String)">
            <summary>
            Gets the adapter.
            </summary>
            <param name="factory">The factory.</param>
            <param name="connectionConfiguration">The connection configuration.</param>
            <param name="query">The query.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">factory;The expected provider factory is not here.</exception>
            <exception cref="T:System.ArgumentException">
            The DBMS Connection string was not specified.
            or
            The DBMS query was not specified.
            </exception>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.GetCommand(System.Data.Common.DbProviderFactory,System.Data.CommandType,System.String)">
            <summary>
            Gets the command.
            </summary>
            <param name="factory">The factory.</param>
            <param name="commandType">Type of the command.</param>
            <param name="commandText">The command text.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.GetConnection(System.Data.Common.DbProviderFactory,System.String)">
            <summary>
            Gets the connection.
            </summary>
            <param name="factory">The factory.</param>
            <param name="connectionConfiguration">The connection configuration.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">factory;The expected provider factory is not here.</exception>
        </member>
        <member name="M:Songhay.DataAccess.CommonDbmsUtility.RemoveKeyValuePairFromConnectionString(System.String,System.String)">
            <summary>
            Removes the key value pair from connection string.
            </summary>
            <param name="connectionConfiguration">The connection configuration.</param>
            <param name="key">The key.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">connectionConfiguration;The expected connection string is not here.</exception>
            <remarks>
            This routine can convert, say, an OLEDB connection string for use with another provider.
            So <c>"Provider=ORAOLEDB.ORACLE;Data Source=MY_SOURCE;User ID=myId;Password=my!#Passw0rd"</c>
            can be converted to <c>Data Source=MY_SOURCE;User ID=myId;Password=my!#Passw0rd"</c>
            with <c>CommonDbmsUtility.RemoveKeyValuePairFromConnectionString(connectionConfiguration, "Provider")</c>.
            </remarks>
        </member>
        <member name="T:Songhay.DataAccess.Extensions.DataSetExtensions">
            <summary>
            Extensions of <see cref="T:System.Data.DataSet"/>
            </summary>
            <summary>
            Extensions of <see cref="T:System.Data.DataSet"/>
            </summary>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.DataSetExtensions.ToDataTableMappings(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Converts the <see cref="!:IEnumerable&lt;string&gt;"/> into a data table mappings.
            </summary>
            <param name="setTableNames">The set table names.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">setTableNames;The expected DataSet names are not here.</exception>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.DataSetExtensions.ToDataTableMappings(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Converts the <see cref="!:IEnumerable&lt;KeyValuePair&lt;string, string&gt;&gt;"/> into a data table mappings.
            </summary>
            <param name="pairs">The pairs.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            pairs;The expected pairs are not here.
            or
            pairs;The expected pairs are not here.
            </exception>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.DataSetExtensions.Load(System.Data.DataSet,System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Loads the specified command.
            </summary>
            <param name="set">The set.</param>
            <param name="command">The command.</param>
            <param name="setTableNames">The set table names.</param>
            <param name="invariantProviderName">Name of the invariant provider.</param>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.DataSetExtensions.Load(System.Data.DataSet,System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String)">
            <summary>
            Loads the specified command.
            </summary>
            <param name="set">The set.</param>
            <param name="command">The command.</param>
            <param name="pairs">The pairs.</param>
            <param name="invariantProviderName">Name of the invariant provider.</param>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.DataSetExtensions.Load(System.Data.DataSet,System.Data.Common.DbCommand,System.Collections.Generic.IEnumerable{System.Data.Common.DataTableMapping},System.String)">
            <summary>
            Loads the specified command.
            </summary>
            <param name="set">The set.</param>
            <param name="command">The command.</param>
            <param name="mappings">The mappings.</param>
            <param name="invariantProviderName">Name of the invariant provider.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            set;The expected set of data is not here.
            or
            command;The expected command is not here.
            or
            mappings;The expected table mappings are not here.
            or
            mappings;The expected table mappings are not here.
            </exception>
        </member>
        <member name="T:Songhay.DataAccess.Extensions.IDataReaderExtensions">
            <summary>
            Extensions of <see cref="T:System.Data.IDataReader"/>
            </summary>
            <summary>
            Extensions of <see cref="T:System.Data.IDataReader"/>
            </summary>
            <summary>
            Extensions of <see cref="T:System.Data.IDataReader"/>
            </summary>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToDateTime(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a date time.
            </summary>
            <param name="reader">The reader.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToDecimal(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a decimal.
            </summary>
            <param name="reader">The reader.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToInt(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a int.
            </summary>
            <param name="reader">The reader.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToLong(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a long.
            </summary>
            <param name="reader">The reader.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToNullableBoolean(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a nullable boolean.
            </summary>
            <param name="reader">The reader.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToNullableDateTime(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a nullable date time.
            </summary>
            <param name="reader">The reader.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToNullableDecimal(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a nullable decimal.
            </summary>
            <param name="reader">The reader.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToNullableInt(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a nullable int.
            </summary>
            <param name="reader">The reader.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToNullableLong(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a nullable long.
            </summary>
            <param name="reader">The reader.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToRowValues(System.Data.IDataReader)">
            <summary>
            Converts the <see cref="T:System.Data.IDataReader"/> into <see cref="!:IEnumerable&lt;object[]&gt;"/>.
            </summary>
            <param name="reader">The reader.</param>
            <exception cref="T:System.ArgumentNullException">The expected reader is not here.</exception>
            <remarks>
            for more info, see “Consuming a DataReader with LINQ”
            [http://www.thinqlinq.com/default/consuming-a-datareader-with-linq]
            </remarks>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToString(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a string.
            </summary>
            <param name="reader">The reader.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToValue(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a value.
            </summary>
            <param name="reader">The reader.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToJObject(System.Data.IDataReader,System.String)">
            <summary>
            Converts <see cref="T:System.Data.IDataReader"/> to <see cref="T:Newtonsoft.Json.Linq.JObject"/>
            </summary>
            <param name="reader">The reader.</param>
            <param name="rootPropertyName">Name of the root property.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.AddXElements(System.Data.IDataReader,System.Xml.Linq.XElement)">
            <summary>
            Adds the <see cref="T:System.Xml.Linq.XElement"/> from <see cref="T:System.Data.IDataReader"/> fields.
            </summary>
            <param name="reader">The reader.</param>
            <param name="rowElement">The row element.</param>
            <remarks>
            This is the row-level method, adding field-elements per row.
            </remarks>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.AddXElements(System.Data.IDataReader,System.Xml.Linq.XElement,System.String)">
            <summary>
            Adds the x elements.
            </summary>
            <param name="reader">The reader.</param>
            <param name="rootElement">The root element.</param>
            <param name="rowElementName">Name of the row element.</param>
            <remarks>
            This is the root-level method, adding row-elements to the root element.
            </remarks>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToXDocument(System.Data.IDataReader)">
            <summary>
            Converts the <see cref="T:System.Data.IDataReader"/> into a <see cref="T:System.Xml.Linq.XDocument"/>.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToXDocument(System.Data.IDataReader,System.String)">
            <summary>
            Converts the <see cref="T:System.Data.IDataReader"/> into a <see cref="T:System.Xml.Linq.XDocument"/>.
            </summary>
            <param name="reader">The reader.</param>
            <param name="rootElementName">Name of the root element.</param>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDataReaderExtensions.ToXDocument(System.Data.IDataReader,System.String,System.String)">
            <summary>
            Converts the <see cref="T:System.Data.IDataReader"/> into a <see cref="T:System.Xml.Linq.XDocument"/>.
            </summary>
            <param name="reader">The reader.</param>
            <param name="rootElementName">Name of the root element.</param>
            <param name="rowElementName">Name of the row element.</param>
        </member>
        <member name="T:Songhay.DataAccess.Extensions.IDbCommandExtensions">
            <summary>
            Extensions of <see cref="T:System.Data.IDbCommand"/>
            </summary>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDbCommandExtensions.WithConnection(System.Data.IDbCommand,System.Data.IDbConnection)">
            <summary>
            Withes the connection.
            </summary>
            <param name="command">The command.</param>
            <param name="connection">The connection.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">connection;The expected connection is not here.</exception>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.IDbCommandExtensions.WithAmbientTransaction(System.Data.IDbCommand,System.Data.IDbTransaction)">
            <summary>
            Sets <see cref="T:System.Data.IDbCommand"/> with the specified <see cref="T:System.Data.IDbTransaction"/>.
            </summary>
            <param name="command">The command.</param>
            <param name="transaction">The transaction.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">transaction;The expected transaction is not here.</exception>
        </member>
        <member name="T:Songhay.DataAccess.Extensions.OracleTableMetadataExtensions">
            <summary>
            Extensions of <see cref="T:Songhay.DataAccess.Models.OracleTableMetadata"/>
            </summary>
            <remarks>
            For research details, see “Oracle Data Types”
            [https://docs.oracle.com/cd/B28359_01/server.111/b28318/datatype.htm]
            </remarks>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.OracleTableMetadataExtensions.ToDataAnnotationsOrEmpty(Songhay.DataAccess.Models.OracleTableMetadata)">
            <summary>
            Converts the <see cref="T:Songhay.DataAccess.Models.OracleTableMetadata"/> into a data annotations or <see cref="F:System.String.Empty"/>.
            </summary>
            <param name="metadata">The metadata.</param>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.OracleTableMetadataExtensions.ToDotNetTypeName(Songhay.DataAccess.Models.OracleTableMetadata)">
            <summary>
            Converts the <see cref="T:Songhay.DataAccess.Models.OracleTableMetadata"/> into a .NET type name.
            </summary>
            <param name="metadata">The metadata.</param>
            <remarks>
            Reference: “Oracle to .NET type mapping” [https://www.devart.com/dotconnect/oracle/docs/DataTypeMapping.html]
            </remarks>
        </member>
        <member name="T:Songhay.DataAccess.Extensions.StringExtensions">
            <summary>
            Extensions of <see cref="T:System.String"/>
            </summary>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.StringExtensions.Escape(System.String)">
            <summary>
            Escapes the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.StringExtensions.ToBoolean(System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a boolean.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.StringExtensions.ToCamelCaseFromUnderscores(System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> to camelcase from underscores.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.StringExtensions.ToNullableBoolean(System.String)">
            <summary>
            Converts the <see cref="T:System.String"/> into a nullable boolean.
            </summary>
            <param name="data">The data.</param>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Extensions.StringExtensions.WithOdbcStyleParameters(System.String)">
            <summary>
            Withes the ODBC style parameters.
            </summary>
            <param name="sql">The SQL.</param>
            <returns></returns>
        </member>
        <member name="T:Songhay.DataAccess.Repository.Extensions.DbContextExtensions">
            <summary>
            Extensions of <see cref="T:Microsoft.EntityFrameworkCore.DbContext"/>
            </summary>
        </member>
        <member name="M:Songhay.DataAccess.Repository.Extensions.DbContextExtensions.Detach``1(Microsoft.EntityFrameworkCore.DbContext,``0)">
            <summary>
            Detaches the specified entity.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="context">the <see cref="T:Microsoft.EntityFrameworkCore.DbContext"/></param>
            <param name="entity">The entity.</param>
        </member>
        <member name="T:Songhay.DataAccess.Models.CommonDbms">
            <summary>
            Represents any DBMS with the specified
            invariant provider name.
            </summary>
        </member>
        <member name="M:Songhay.DataAccess.Models.CommonDbms.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.DataAccess.Models.CommonDbms"/> class.
            </summary>
            <param name="invariantProviderName">Name of the invariant provider.</param>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:Songhay.DataAccess.Models.CommonDbms.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Songhay.DataAccess.Models.CommonDbms"/> class.
            </summary>
            <param name="invariantProviderName">Name of the invariant provider.</param>
            <param name="connectionString">The connection string.</param>
            <param name="connectionStringKey">The connection string key.</param>
            <param name="encryptionMetaJson">The encryption meta json.</param>
            <exception cref="T:System.ArgumentNullException">
            invariantProviderName;The expected provider name is not here.
            or
            connectionString;The expected connection string is not here.
            </exception>
        </member>
        <member name="P:Songhay.DataAccess.Models.CommonDbms.InvariantProviderName">
            <summary>
            Gets the name of the invariant provider.
            </summary>
            <value>
            The name of the invariant provider.
            </value>
        </member>
        <member name="P:Songhay.DataAccess.Models.CommonDbms.ProviderFactory">
            <summary>
            Gets the provider factory.
            </summary>
            <value>
            The provider factory.
            </value>
        </member>
        <member name="M:Songhay.DataAccess.Models.CommonDbms.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:Songhay.DataAccess.Models.CommonDbms.GetProviderNotSupportedException">
            <summary>
            Gets the provider not supported exception.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Songhay.DataAccess.Models.CommonDbms.GetSql(System.String)">
            <summary>
            Gets the SQL by the specified key or <see cref="!:CallerMemberName"/>.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Songhay.DataAccess.Models.CommonDbms.OnConnectionOpen(System.Data.Common.DbConnection)">
            <summary>
            Called when the <see cref="T:System.Data.Common.DbConnection"/> is open.
            </summary>
            <param name="connection">The connection.</param>
        </member>
        <member name="M:Songhay.DataAccess.Models.CommonDbms.SetSql(System.Func{System.Collections.Generic.Dictionary{System.String,System.String}})">
            <summary>
            Sets the SQL.
            </summary>
            <param name="sqlSetter">The SQL setter.</param>
            <exception cref="T:System.ArgumentNullException">sqlSetter;The expected SQL-statement setter is not here.</exception>
        </member>
        <member name="T:Songhay.DataAccess.Models.CommonDbmsConstants">
            <summary>
            Magic strings of Data Access
            </summary>
        </member>
        <member name="F:Songhay.DataAccess.Models.CommonDbmsConstants.OdbcProvider">
            <summary>
            The ODBC provider
            </summary>
        </member>
        <member name="F:Songhay.DataAccess.Models.CommonDbmsConstants.OracleProvider">
            <summary>
            The oracle provider
            </summary>
        </member>
        <member name="T:Songhay.DataAccess.Models.OracleTableMetadata">
            <summary>
            Represents output from <c>SYS.ALL_TAB_COLUMNS</c>.
            </summary>
            <summary>
            Represents output from <c>SYS.ALL_TAB_COLUMNS</c>.
            </summary>
        </member>
        <member name="F:Songhay.DataAccess.Models.OracleTableMetadata.OracleSysAllTabColumnsSql">
            <summary>
            The Oracle <c>SYS.ALL_TAB_COLUMNS</c> parameterized SQL.
            </summary>
            <remarks>
            Note that <c>TABLE_NAME</c> in the SQL below can specify a View name as well.
            </remarks>
        </member>
        <member name="P:Songhay.DataAccess.Models.OracleTableMetadata.ColumnId">
            <summary>
            Gets or sets the column identifier.
            </summary>
            <value>
            The column identifier.
            </value>
        </member>
        <member name="P:Songhay.DataAccess.Models.OracleTableMetadata.ColumnName">
            <summary>
            Gets or sets the name of the column.
            </summary>
            <value>
            The name of the column.
            </value>
        </member>
        <member name="P:Songhay.DataAccess.Models.OracleTableMetadata.IsNullable">
            <summary>
            Gets or sets a value indicating whether this instance is nullable.
            </summary>
            <value>
            <c>true</c> if this instance is nullable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Songhay.DataAccess.Models.OracleTableMetadata.DataType">
            <summary>
            Gets or sets the type of the data.
            </summary>
            <value>
            The type of the data.
            </value>
        </member>
        <member name="P:Songhay.DataAccess.Models.OracleTableMetadata.DataPrecision">
            <summary>
            Gets or sets the data precision.
            </summary>
            <value>
            The data precision.
            </value>
        </member>
        <member name="P:Songhay.DataAccess.Models.OracleTableMetadata.DataLength">
            <summary>
            Gets or sets the length of the data.
            </summary>
            <value>
            The length of the data.
            </value>
        </member>
        <member name="P:Songhay.DataAccess.Models.OracleTableMetadata.DataScale">
            <summary>
            Gets or sets the data scale.
            </summary>
            <value>
            The data scale.
            </value>
        </member>
        <member name="P:Songhay.DataAccess.Models.OracleTableMetadata.DataDefault">
            <summary>
            Gets or sets the data default.
            </summary>
            <value>
            The data default.
            </value>
        </member>
        <member name="P:Songhay.DataAccess.Models.OracleTableMetadata.TableName">
            <summary>
            Gets or sets the name of the table.
            </summary>
            <value>
            The name of the table.
            </value>
        </member>
        <member name="M:Songhay.DataAccess.Models.OracleTableMetadata.ToString">
            <summary>
            The string representation of this instance.
            </summary>
        </member>
    </members>
</doc>
